# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   tapioca generate

# typed: true

module JSON::Ext
end

module JSON::Ext::Generator
end

module JSON::Ext::Generator::GeneratorMethods
end

module JSON::Ext::Generator::GeneratorMethods::Array
  def to_json(*_); end
end

module JSON::Ext::Generator::GeneratorMethods::FalseClass
  def to_json(*_); end
end

module JSON::Ext::Generator::GeneratorMethods::Float
  def to_json(*_); end
end

module JSON::Ext::Generator::GeneratorMethods::Hash
  def to_json(*_); end
end

module JSON::Ext::Generator::GeneratorMethods::Integer
  def to_json(*_); end
end

module JSON::Ext::Generator::GeneratorMethods::NilClass
  def to_json(*_); end
end

module JSON::Ext::Generator::GeneratorMethods::Object
  def to_json(*_); end
end

module JSON::Ext::Generator::GeneratorMethods::String
  def to_json(*_); end
  def to_json_raw(*_); end
  def to_json_raw_object; end

  def self.included(_); end
end

module JSON::Ext::Generator::GeneratorMethods::String::Extend
  def json_create(_); end
end

module JSON::Ext::Generator::GeneratorMethods::TrueClass
  def to_json(*_); end
end

class JSON::Ext::Generator::State
  def initialize(*_); end

  def [](_); end
  def []=(_, _); end
  def allow_nan?; end
  def array_nl; end
  def array_nl=(_); end
  def ascii_only?; end
  def buffer_initial_length; end
  def buffer_initial_length=(_); end
  def check_circular?; end
  def configure(_); end
  def depth; end
  def depth=(_); end
  def generate(_); end
  def indent; end
  def indent=(_); end
  def max_nesting; end
  def max_nesting=(_); end
  def merge(_); end
  def object_nl; end
  def object_nl=(_); end
  def space; end
  def space=(_); end
  def space_before; end
  def space_before=(_); end
  def to_h; end
  def to_hash; end

  private

  def initialize_copy(_); end

  def self.from_state(_); end
end

class JSON::Ext::Parser
  def initialize(*_); end

  def parse; end
  def source; end
end

JSON::UnparserError = JSON::GeneratorError
